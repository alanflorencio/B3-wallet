datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id              Int           @default(autoincrement()) @id
  email           String        @unique
  name            String?
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @default(now())
}

model Wallet {
  id              Int           @default(autoincrement()) @id
  name            String?
  walletAmount    Amount[]
  status          Boolean       @default(false)
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @default(now())
}

model Amount {
  id              Int           @default(autoincrement()) @id
  name            String?        @unique
  peso            String?
  amount          Int
  wallet          Wallet        @relation(fields: [walletId], references: [id])
  walletId        Int           // relation scalar field (used in the `@relation` attribute above)
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @default(now())
}

model Acoes {
  id              Int           @default(autoincrement()) @id
  name            String?       
  code            String?
  pic             String?              
  qty             String?       
  purchasePrice   String?
  status          Boolean
  purchaseDate    String?
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @default(now())
}



model AcoesUs {
  id              Int           @default(autoincrement()) @id
  name            String?       
  code            String?
  pic             String?              
  qty             String?       
  purchasePrice   String?
  status          Boolean
  purchaseDate    String?
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @default(now())
}


model Crypto {
  id              Int           @default(autoincrement()) @id
  name            String?       
  code            String?
  pic             String?              
  qty             String?       
  purchasePrice   String?
  status          Boolean
  purchaseDate    String?               
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @default(now())
}



model Caixa {
  id              Int           @default(autoincrement()) @id
  name            String?       
  code            String?
  description     String?
  pic             String?              
  qty             String?       
  purchasePrice   String?
  status          Boolean
  purchaseDate    String?               
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @default(now())
}








// model AcoesAmount {
//   id              Int           @default(autoincrement()) @id
//   name            String?
//   amount          Int
//   createdAt       DateTime      @default(now())
//   updatedAt       DateTime      @default(now())
// }


// model AcoesUsAmount {
//   id              Int           @default(autoincrement()) @id
//   name            String?
//   amount          Int
//   createdAt       DateTime      @default(now())
//   updatedAt       DateTime      @default(now())
// }

// model CryptoAmount {
//   id              Int           @default(autoincrement()) @id
//   name            String?
//   amount          Int
//   createdAt       DateTime      @default(now())
//   updatedAt       DateTime      @default(now())
// }

// model CaixaAmount {
//   id              Int           @default(autoincrement()) @id
//   name            String?
//   amount          Int
//   createdAt       DateTime      @default(now())
//   updatedAt       DateTime      @default(now())
// }
